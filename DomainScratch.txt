What does a Checkers domain need?

1.) Each player has a color (red or black)

2.) Each checker has properties
	a.) A color
	b.) A rank (normal or king)
	c.) A position (coordinate on board)
	d.) Can move again (after capturing an enemy checker)
		i.) not forced to move

3.) A board has properties
	a.) Rows
		i.) List of individual squares
		ii.) Static member to pull from
		iii.) Whether or not a KING row
	b.) Columns
		i.) List of individual squares
		ii.) Static member to pull from
	c.) A dictionary of what pieces lie on which squares

4.) Each square has properties
	a.) A Row index
	b.) A Column index


	Ideas from Chess implementation
		1.) There exists a GameState that holds the Board information as well as who is next to Move, and a Message to display to user
		2.) There needs to be validation for legitimate moves
			a.) Can use 2 different types and validate an attempt into an actual
				i.) AttemptedMove
				ii.) Move
		3.) Board is a Map<Square, Piece option>
			a.) Use option type with Result<OK, ERROR>/RailwayProgramming for Move Validation

------------------------------------------------------------

Validation for Move should include:

1.) Alternating colors should 


------------------------------------------------------------

Algorithm for subtracting cells
Assuming validation for diagonal move of 2
	1.) each cell has a column and row
	2.) resultColumn = indexof col1 + indexof col2 / 2
	3.) resultRow = indexof row1 + index of row2 / 2
	4.) return (resultColumn, resultRow)

	          0    1      2       3      4     5      6      7
type Column = A |  B  |   C   |   D  |   E  |  F  |   G   |  H
type Row =  One | Two | Three | Four | Five | Six | Seven | Eight

example #1 a1 c3
	1.) cols are A and C, rows are 1 and 3
	2.) resultCol = ((indexOf A = ) 0 + (indexOf C = ) 2 ) / 2
		resultCol = 2 / 2
		resultCol = 1
	3.) resultRow = ((indexOf One = ) 0 + (indexOf Three = ) 2 ) / 2
		resultRow = 2 / 2
		resultRow = 1
	4.) return ( Column.List.[1], Row.List.[1] ) 
		return B Two (correct)

example #2 d6 b8
	1.) D B, Six Eight
	2.) resultCol = (3 + 1) / 2
		resultCol = 2 (C)
	3.) resultRow = (5 + 7) / 2
		resultRow = 6 (Seven)

example #3 e5 c3	(king checker capture)
	1.) E C, 5 3
	2.) resultCol = (4, 2) / 2
		resultCol = 3
	3.) resultRow = (4, 2) / 2
		resultRow = 3